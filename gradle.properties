## For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
#
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx1024m -XX:MaxPermSize=256m
# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
#
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true
#Tue Apr 07 15:17:21 CST 2020
org.gradle.jvmargs=-Xmx2048M
# AndroidX
android.useAndroidX=true
android.enableJetifier=true
# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official
#
android.injected.testOnly=false
android.databinding.incremental=true
android.lifecycleProcessor.incremental=true
#
kapt.incremental.apt=true
kapt.use.worker.api=true
kapt.include.compile.classpath=false
#
#构建初始化需要执行许多任务，例如java虚拟机的启动，加载虚拟机环境，加载class文件等等，配置此项可以开启线程守护，并且仅仅第一次编译时会开启线程（Gradle 3.0版本以后默认支持）
org.gradle.daemon=true
#开启并行编译，相当使用了多线程，仅仅适用于模块化项目（存在多个 Library 库工程依赖主工程）
org.gradle.parallel=true
#开启构建缓存，Gradle 3.5新的缓存机制，可以缓存所有任务的输出，不同于buildCache仅仅缓存dex的外部libs，它可以复用任何时候的构建缓存，设置包括其它分支的构建缓存
org.gradle.caching=true
#最大的优势在于帮助多 Moudle 的工程提速，在编译多个 Module 相互依赖的项目时，Gradle 会按需选择进行编译，即仅仅编译相关的 Module
org.gradle.configureondemand=true
